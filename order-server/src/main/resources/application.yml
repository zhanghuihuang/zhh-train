spring:
  application:
    name: ${application_name:order-server}
  datasource:
    url: jdbc:mysql://localhost:3306/train_db?autoReconnect=true&useSSL=false&characterEncoding=utf-8
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
  cloud:
    loadbalancer:
      retry:
        enabled: true
      ribbon:
        enabled: true
server:
  port: 8803
eureka:
  client:
    registry-fetch-interval-seconds: 30 # 指示从eureka服务器获取注册表信息的频率（s）
    service-url:
      defaultZone: http://peer1:8801/eureka
  instance:
    instance-id: ${spring.application.name}-${random.int}
    lease-expiration-duration-in-seconds: 90 #定义服务失效时间
    lease-renewal-interval-in-seconds: 30 #续约时间
    hostname: peer1
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always # 配置显示health节点的详细信息

ribbon:
  ConnectTimeout: 4000 #该参数可以用来设置创建请求连接的超时时间
  ReadTimeout: 1000 #设置请求的超时时间,指的是连接建立之后的处理时间
  OkToRetryOnAllOperations: true
  MaxAutoRetries: 1 # 重试策略先尝试访问首选实例一次，失败后才更换实例访问
  MaxAutoRetriesNextServer: 2 #更换实例访问的次数
INVENTORY-SERVER:
  ribbon:
    ConnectTimeout: 4000 #该参数可以用来设置创建请求连接的超时时间
    ReadTimeout: 1000 #设置请求的超时时间,指的是连接建立之后的处理时间
    OkToRetryOnAllOperations: true
    MaxAutoRetries: 1 # 重试策略先尝试访问首选实例一次，失败后才更换实例访问
    MaxAutoRetriesNextServer: 2 #更换实例访问的次数
feign:
  hystrix:
    enabled: true